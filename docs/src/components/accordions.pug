extends ../_layout/_docs-layout.pug

block variables
  - var slug = 'accordions'
  - var parent = 'components'
  - var title = 'Accordions - Components - ridestyler.ui CSS Framework'
  - var description = 'Accordions are used to toggle sections of content. ridestyler.ui CSS Framework is a lightweight, responsive and modern CSS framework for faster and extensible development.'

block docs-content
  +docs-heading('accordions', 'Accordions')
    
    p Accordions are used to toggle sections of content.

    .docs-demo.columns
      .column.col-6.col-md-12
        .accordion
          input#accordion-1(type="radio" name="accordion-radio" hidden="" checked="")
          label.accordion-header.justify-space-between.c-hand(for="accordion-1")
            | Elements
            i.icon.icon-accordion.ml-2
          .accordion-body
            ul.menu.menu-nav
              li.menu-item
                a(href="#accordions") Element 1
              li.menu-item
                a(href="#accordions") Element 2
        .accordion
          input#accordion-2(type="radio" name="accordion-radio" hidden="")
          label.accordion-header.justify-space-between.c-hand(for="accordion-2")
            | Layout
            i.icon.icon-accordion.ml-2
          .accordion-body
            ul.menu.menu-nav
              li.menu-item
                a(href="#accordions") Layout 1
              li.menu-item
                a(href="#accordions") Layout 2
        .accordion
          input#accordion-3(type="radio" name="accordion-radio" hidden="")
          label.accordion-header.justify-space-between.c-hand(for="accordion-3")
            | Components
            i.icon.icon-accordion.ml-2
          .accordion-body
            ul.menu.menu-nav
              li.menu-item
                a(href="#accordions") Component 1
              li.menu-item
                a(href="#accordions") Component 2
      .column.col-6.col-md-12
        .accordion
          input#accordion-4(type="checkbox" name="accordion-checkbox" hidden="" checked="")
          label.accordion-header.justify-space-between.c-hand(for="accordion-4")
            | Elements
          .accordion-body
            ul.menu.menu-nav
              li.menu-item
                a(href="#accordions") Element 1
              li.menu-item
                a(href="#accordions") Element 2
        .accordion
          input#accordion-5(type="checkbox" name="accordion-checkbox" hidden="")
          label.accordion-header.c-hand(for="accordion-5")
            | Layout
          .accordion-body
            ul.menu.menu-nav
              li.menu-item
                a(href="#accordions") Layout 1
              li.menu-item
                a(href="#accordions") Layout 2
        .accordion
          input#accordion-6(type="checkbox" name="accordion-checkbox" hidden="")
          label.accordion-header.c-hand(for="accordion-6")
            | Components
          .accordion-body
            ul.menu.menu-nav
              li.menu-item
                a(href="#accordions") Component 1
              li.menu-item
                a(href="#accordions") Component 2

    pre.code(data-lang='HTML')
      code
        :highlight(lang="html")
          <!-- standard Accordions example -->
          <div class="accordion">
            <input type="checkbox" id="accordion-1" name="accordion-checkbox" hidden>
            <label class="accordion-header" for="accordion-1">
              Title
              <i class="icon icon-accordion ml-2"></i>
            </label>
            <div class="accordion-body">
              <!-- Accordions content -->
            </div>
          </div>

          <!-- mutually exclusive Accordions example (with same input names) -->
          <div class="accordion">
            <input type="radio" id="accordion-1" name="accordion-radio" hidden>
            <label class="accordion-header" for="accordion-1">
              Title
            </label>
            <div class="accordion-body">
              <!-- Accordions content -->
            </div>
          </div>

    p
      | Alternatively, you can use #[code details] and #[code summary] instead of #[code input] radio or checkbox trick.
      | Add the #[code open] attribute to #[code details] to expand it.
      | Microsoft Edge support is #[a(href="https://developer.microsoft.com/en-us/microsoft-edge/platform/status/detailssummary/" target="_blank") under consideration].

    pre.code(data-lang='HTML')
      code
        :highlight(lang="html")
          <!-- details and summary Accordions example -->
          <details class="accordion" open>
            <summary class="accordion-header">
              Title
              <i class="icon icon-accordion ml-2"></i>
            </summary>
            <div class="accordion-body">
              <!-- Accordions content -->
            </div>
          </details>

    +docs-subheading('accordion-component', 'Component')

    p
      | You can use the accordion component to quickly add a set of customizable accordions. Add a 
      | accordion element inside of the DOM and add any available settings as a prop. Available slots 
      | include: 
      code header
      |  and 
      code body
      |.

    pre.code(data-lang='HTML')
      code
        :highlight(lang="html")
          <!-- Accordion component example -->
          <Accordion name="accordion-radio" 
            :exclusive="true" 
            :scroll-into-view="true">
            <template v-slot:header>
              <h4>Title</h4>
              <i>Lorem ipsum dolor sit amet</i>
            </template>
            <template v-slot:body>
              <!-- Accordions content -->
            </template>
          </Accordion>
      
    h4 props

    ul
      li
        strong name
        |  - default: unique name string. Optional input name, useful for mutually exclusive Accordions
      li
        strong id
        |  - default: unique id string. Optional input id
      li
        strong exclusive
        |  - default: false. Set to true for mutually exclusive Accordions (with same input names)
      li
        strong scroll-into-view
        |  - default: false. Set to true for auto scroll to top of current accordion when expanded
        
    h4 events

    ul
      li
        strong expanded
        |  - Event emitted when accordion finishes expanding.
      li
        strong collapsed
        |  - Event emitted when accordion finishes collapsing.
        
    h4 slots

    ul
      li
        strong header
        |  - The slot for adding content to the accordion header.
      li
        strong body
        |  - The slot for adding content to the accordion body.

    p
      | Checkout out the 
      a(href='../getting-started/javascript.html#rs-ui-components', target='_blank') Javascript 
      | page for more information on how to setup a custom component.

  include ../_layout/_footer.pug