extends ../_layout/_docs-layout.pug

block variables
  - var slug = 'nav'
  - var parent = 'components'
  - var title = 'Nav - Components - ridestyler.ui CSS Framework'
  - var description = 'ridestyler.ui CSS Framework is a lightweight, responsive and modern CSS framework for faster and extensible development. ridestyler.ui provides basic styles for typography and elements, flexbox based responsive layout system, pure CSS components and utilities with best practice coding and consistent design language.'

block docs-content
  +docs-heading('nav', 'Nav')

    .docs-demo.columns
      .column.col-6.col-xs-12
        ul.nav
          li.nav-item
            a(href="#nav") Elements
          li.nav-item.active
            a(href="#nav") Layout
            ul.nav
              li.nav-item
                a(href="#nav") Flexbox grid
              li.nav-item
                a(href="#nav") Responsive
              li.nav-item
                a(href="#nav") Navbar
              li.nav-item
                a(href="#nav") Empty states
          li.nav-item
            a(href="#nav") Components
          li.nav-item
            a(href="#nav") Utilities

    p
      | Add a container element with the #[code nav] class.
      | And add child elements with the #[code nav-item] class.
      | The #[code nav-item] with the #[code active] class will be highlighted.

    pre.code(data-lang='HTML')
      code
        :highlight(lang="html")
          <ul class="nav">
            <li class="nav-item">
              <a href="#">Elements</a>
            </li>
            <li class="nav-item active">
              <a href="#">Layout</a>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#">Flexbox grid</a>
                </li>
                <li class="nav-item">
                  <a href="#">Responsive</a>
                </li>
                <li class="nav-item">
                  <a href="#">Navbar</a>
                </li>
                <li class="nav-item">
                  <a href="#">Empty states</a>
                </li>
              </ul>
            </li>
            <li class="nav-item">
              <a href="#">Components</a>
            </li>
            <li class="nav-item">
              <a href="#">Utilities</a>
            </li>
          </ul>

    +docs-subheading('accordion-component', 'Component')

    p
      | You can use the ToggleNav component to quickly hide and show inner nav-items.
      | instead of wrapping your #[code nav-items] in a #[code nav], wrap them in a ToggleNav element and add any available nav-items.
      | Lastly, add a selector to your toggle switch element and add the selector to your ToggleNav element as a #[code toggleSelector] prop to initiate your toggle switch.

    pre.code(data-lang='HTML')
      code
        :highlight(lang="html")
          <!-- ToggleNav component example -->
          <ul class="nav">
            <li class="nav-item">
              <a href="#">Elements</a>
            </li>
            <li class="nav-item active">
              <a href="#" id="nav-toggle">Layout</a>
              <ToggleNav toggleSelector="#nav-toggle">
                <li class="nav-item">
                  <a href="#">Flexbox grid</a>
                </li>
                <li class="nav-item">
                  <a href="#">Responsive</a>
                </li>
                <li class="nav-item">
                  <a href="#">Navbar</a>
                </li>
                <li class="nav-item">
                  <a href="#">Empty states</a>
                </li>
              </ToggleNav>
            </li>
            <li class="nav-item">
              <a href="#">Components</a>
            </li>
            <li class="nav-item">
              <a href="#">Utilities</a>
            </li>
          </ul>

    h4 props

    ul
      li
        strong toggleSelector
        |  - the id or class selector on the element you want used as the toggle switch.

    p
      | Checkout out the 
      a(href='../getting-started/javascript.html#rs-ui-components', target='_blank') Javascript 
      | page for more information on how to setup a custom component.

  include ../_layout/_footer.pug
  
block scripts
  script
      | new Vue({
      |   extends: rsui.components.ToggleNav,
      |   el: '#toggle-nav'
      | })