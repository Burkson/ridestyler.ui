// Forms
.form-group {
	&:not(:last-child) {
		margin-bottom: $layout-spacing;
	}
}

fieldset {
	margin-bottom: $layout-spacing-lg;
}

legend {
	font-size: $font-size-lg;
	font-weight: 500;
	margin-bottom: $layout-spacing-lg;
}

// Form element: Label
.form-label {
	display: block;
	line-height: $line-height;
	padding: $control-padding-y + $border-width 0;

	&.label-sm {
		font-size: $font-size-sm;
		padding: $control-padding-y-sm + $border-width 0;
	}

	&.label-lg {
		font-size: $font-size-lg;
		padding: $control-padding-y-lg + $border-width 0;
	}
}

.form-input, .form-select {
	border: none;
	border-width: $border-width-lg;
	border-bottom-style: solid;
	border-color: $border-color-light;

	&:focus {
		border-color: $border-color;
	}
}

%bordered-input {
	border-style: solid;
	border-width: $border-width-lg;
}

form.form-full .form-input, textarea.form-input {
	@extend %bordered-input;
}

// Form element: Input
.form-input {
	appearance: none;
	background-color: $bg-color-light;
	background-image: none;
	
	color: $body-font-color;
	display: block;
	font-size: $font-size;
	height: $control-size;
	line-height: $line-height;
	max-width: 100%;
	outline: none;
	padding: $control-padding-y-sm $control-padding-x-sm;
	position: relative;
	transition: background-color .2s, border-bottom .2s, box-shadow .2s, color .2s;
	width: 100%;

	&::placeholder {
		color: $gray-color;
	}

	// Input sizes
	&.input-sm {
		font-size: $font-size-sm;
		height: $control-size-sm;
		padding: $control-padding-y-sm $control-padding-x-sm;
	}

	&.input-lg {
		font-size: $font-size-lg;
		height: $control-size-lg;
		padding: $control-padding-y-lg $control-padding-x-lg;
	}

	&.input-inline {
		display: inline-block;
		vertical-align: middle;
		width: auto;
	}

	// Input types
	&[type="file"] {
		height: auto;
	}
}

// Form element: Textarea
textarea.form-input {

	&,
	&.input-lg,
	&.input-sm {
		height: auto;
	}
}

// Form element: Input hint
.form-input-hint {
	color: $gray-color-dark;
	font-size: $font-size-sm;
	margin-top: $unit-1;

	.has-success &,
	.is-success+& {
		color: $success-color;
	}

	.has-error &,
	.is-error+& {
		color: $error-color;
	}
}

// Form element: Select
.form-select {
	color: inherit;
	font-size: $font-size;
	height: $control-size;
	line-height: $line-height;
	outline: none;
	padding: $control-padding-y $control-padding-x;
	vertical-align: middle;
	width: 100%;
	background-color: $bg-color-light;

	// Select sizes
	&.select-sm {
		font-size: $font-size-sm;
		height: $control-size-sm;
		padding: $control-padding-y-sm ($control-icon-size + $control-padding-x-sm) $control-padding-y-sm $control-padding-x-sm;
	}

	&.select-lg {
		font-size: $font-size-lg;
		height: $control-size-lg;
		padding: $control-padding-y-lg ($control-icon-size + $control-padding-x-lg) $control-padding-y-lg $control-padding-x-lg;
	}

	// Multiple select
	&[size],
	&[multiple] {
		@extend %bordered-input;
		
		height: auto;
		padding: $control-padding-y $control-padding-x;

		option {
			padding: $unit-h $unit-1;
		}
	}
}

// Form Icons
.has-icon-left,
.has-icon-right {
	position: relative;

	.form-icon {
		height: $control-icon-size;
		margin: 0 $control-padding-y;
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		width: $control-icon-size;
		z-index: $zindex-0 + 1;
		display: flex;
		align-items: center;
		justify-content: center;
	}
}

.has-icon-left {
	.form-icon {
		left: $border-width;
	}

	.form-input {
		padding-left: $control-icon-size + $control-padding-y * 2;
	}
}

.has-icon-right {
	.form-icon {
		right: $border-width;
	}

	.form-input {
		padding-right: $control-icon-size + $control-padding-y * 2;
	}
}

// Form element: Checkbox and Radio
.form-checkbox,
.form-radio,
.form-switch {
	display: block;
	line-height: $line-height;
	margin: ($control-size - $control-size-sm) / 2 0;
	min-height: $control-size-sm;
	padding: (($control-size-sm - $line-height) / 2) $control-padding-x (($control-size-sm - $line-height) / 2) ($control-icon-size + $control-padding-x);
	position: relative;
	cursor: pointer;

	input {
		clip: rect(0, 0, 0, 0);
		height: 1px;
		margin: -1px;
		overflow: hidden;
		position: absolute;
		width: 1px;

		&:focus+.form-icon {
			border-color: $primary-color;
		}

		&:checked+.form-icon {
			background: $primary-color;
			border-color: $primary-color;
		}
	}

	.form-icon {
		cursor: pointer;
		display: inline-block;
		position: absolute;
		transition: background .2s, border .2s, box-shadow .2s, color .2s;
	}

	// Input checkbox, radio and switch sizes
	&.input-sm {
		font-size: $font-size-sm;
		margin: 0;
	}

	&.input-lg {
		font-size: $font-size-lg;
		margin: ($control-size-lg - $control-size-sm) / 2 0;
	}
}

.form-checkbox,
.form-radio {
	.form-icon {
		background: $bg-color-light;
		height: $control-icon-size;
		left: 0;
		top: ($control-size-sm - $control-icon-size) / 2;
		width: $control-icon-size;
		border: 1px solid $gray-color;
	}

	input {
		&:active+.form-icon {
			background: $bg-color-dark;
		}
	}
}

.form-checkbox {
	.form-icon {
		border-radius: $border-radius-sm;
	}

	input {
		&:checked+.form-icon {
			&::before {
				background-clip: padding-box;
				border: $border-width-lg solid $light-color;
				border-left-width: 0;
				border-top-width: 0;
				content: "";
				height: 9px;
				left: 50%;
				margin-left: -3px;
				margin-top: -6px;
				position: absolute;
				top: 50%;
				transform: rotate(45deg);
				width: 6px;
			}
		}

		&:indeterminate+.form-icon {
			background: $primary-color;
			border-color: $primary-color;

			&::before {
				background: $bg-color-light;
				content: "";
				height: 2px;
				left: 50%;
				margin-left: -5px;
				margin-top: -1px;
				position: absolute;
				top: 50%;
				width: 10px;
			}
		}
	}
}

.form-radio {
	.form-icon {
		border-radius: 50%;
	}

	input {
		&:checked+.form-icon {
			&::before {
				background: $bg-color-light;
				border-radius: 50%;
				content: "";
				height: 6px;
				left: 50%;
				position: absolute;
				top: 50%;
				transform: translate(-50%, -50%);
				width: 6px;
			}
		}
	}
}

// Form element: Switch
.form-switch {
	padding-left: ($unit-8 + $control-padding-x);

	.form-icon {
		background: $gray-color;
		background-clip: padding-box;
		border-radius: $unit-2;
		height: $unit-4;
		left: 0;
		top: ($control-size-sm - $unit-4) / 2 ;
		width: $unit-8;

		&::before {
			background: $bg-color-light;
			border-radius: 50%;
			content: "";
			display: block;
			height: $unit-4;
			left: 0;
			position: absolute;
			top: 0;
			transition: background .2s, border .2s, box-shadow .2s, color .2s, left .2s;
			width: $unit-4;
		}
	}

	input {
		&:checked+.form-icon {
			&::before {
				left: $unit-4;
			}
		}

		&:active+.form-icon {
			&::before {
				background: $bg-color;
			}
		}
	}
}

// Form element: Input groups
.input-group {
	display: flex;

	.input-group-addon {
		background: $bg-color;
		border: $border-width solid $border-color-dark;
		border-radius: $border-radius;
		line-height: $line-height;
		padding: $control-padding-y $control-padding-x;
		white-space: nowrap;

		display: flex;
		align-items: center;

		&.addon-sm {
			font-size: $font-size-sm;
			padding: $control-padding-y-sm $control-padding-x-sm;
		}

		&.addon-lg {
			font-size: $font-size-lg;
			padding: $control-padding-y-lg $control-padding-x-lg;
		}
	}

	.form-input,
	.form-select {
		flex: 1 1 auto;
		width: 1%;
		height: auto;
	}

	.input-group-btn {
		z-index: $zindex-0;
	}
	.form-input,
	.form-select,
	.input-group-addon {
		border-radius: 0;
	}

	.form-input,
	.form-select,
	.input-group-addon,
	.input-group-btn {
		border-top: none;
		border-left: none;
		border-right: none;
		border-bottom-left-radius: 0;
		border-top-left-radius: 0;
	}

	.form-input {
		&:focus {
			border-bottom: 1px solid $primary-color;
		}
	}

	.form-select {
		width: auto;
	}

	&.input-inline {
		display: inline-flex;
	}
}

// Form validation states
.form-input,
.form-select {

	.has-success &,
	&.is-success {
		background: lighten($success-color, 53%);
		border-color: $success-color;
	}

	.has-error &,
	&.is-error {
		background: lighten($error-color, 53%);
		border-color: $error-color;
	}
}

.form-checkbox,
.form-radio,
.form-switch {

	.has-error &,
	&.is-error {
		.form-icon {
			border-color: $error-color;
		}

		input {
			&:checked+.form-icon {
				background: $error-color;
				border-color: $error-color;
			}

			&:focus+.form-icon {
				border-color: $error-color;
			}
		}
	}
}

.form-checkbox {

	.has-error &,
	&.is-error {
		input {
			&:indeterminate+.form-icon {
				background: $error-color;
				border-color: $error-color;
			}
		}
	}
}

// validation based on :placeholder-shown (Edge doesn't support it yet)
.form-input {
	&:not(:placeholder-shown) {
		&:invalid {
			border-color: $error-color;

			&:focus {
				background: lighten($error-color, 53%);
			}

			&+.form-input-hint {
				color: $error-color;
			}
		}
	}
}

// Form disabled and readonly
.form-input,
.form-select {

	&:disabled,
	&.disabled {
		background-color: $bg-color-dark;
		cursor: not-allowed;
		opacity: .5;
	}
}

.form-input {
	&[readonly] {
		background-color: $bg-color;
	}
}

input {

	&:disabled,
	&.disabled {
		&+.form-icon {
			background: $bg-color-dark;
			cursor: not-allowed;
			opacity: .5;
		}
	}
}

.form-switch {
	input {

		&:disabled,
		&.disabled {
			&+.form-icon::before {
				background: $bg-color-light;
			}
		}
	}
}

// Form horizontal
.form-horizontal {
	padding: $layout-spacing 0;

	.form-group {
		display: flex;
		flex-wrap: wrap;
	}
}

// Form inline
.form-inline {
	display: inline-block;
	width: auto;
}