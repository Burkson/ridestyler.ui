$headerColor: $ridestyler-color-dark-gray;
$subheaderColor: $ridestyler-color-gray;

.table {
    width: 100%;

    @if $rtl==true {
        text-align: right;
    } @else {
        text-align: left;
    }

    td,
    th {
        padding: $unit-1 $unit-2;
    }

    th {
        text-transform: uppercase;
    }

    thead {
        th {
            background-color: $headerColor;
            color: $light-color;
        }
    }

    tbody {
        th {
            background-color: $subheaderColor;
            color: $light-color;
        }
    }

    &.table-striped {
        tbody {
            tr:nth-of-type(odd) {
                background: $bg-color;
            }
        }

        &.table-hover tbody tr:nth-of-type(odd):hover {
            background: $bg-color-dark;
        }
    }

    &.table-striped-even {
        tbody {
            tr:nth-of-type(even) {
                background: $bg-color;
            }
        }

        &.table-hover tbody tr:nth-of-type(even):hover {
            background: $bg-color-dark;
        }
    }

    &,
    &.table-striped,
    &.table-striped-even {
        tbody {
            tr {
                &.active {
                    background: $active-color;
                }
            }
        }

        &.table-hover tbody tr.active:hover {
            background: darken($active-color, 10%);
        }
    }

    &.table-hover {
        tbody {
            tr {
                &:hover {
                    background: $gray-color;
                }
            }
        }
    }

    &.table-mini {
        width: auto;
        th {
            font-size: $font-size-xxs;
        }
        td {
            font-size: $font-size-xs;
        }
        thead {
            tr {
                th {
                    padding: 0 2px;
                    color: $dark-color;
                    background: transparent;
                }
            }
        }
        tbody {
            tr {
                th {
                    padding: 0 4px 0 2px;
                    color: $dark-color;
                    background: transparent;
                }
                td {
                    padding: 0 2px;
                }
            }
        }
    }
}

.table-responsive {
    // The code for sticky headers is modified from BootstrapVue's sticky headers: https://github.com/bootstrap-vue/bootstrap-vue/blob/dev/src/components/table/_table.scss

    overflow: auto;
    // Default `max-height` before a scrollbar will show
    // We don't use `height` as table could be shorter than this value
    max-height: 20vh;

    > .table {
        // Reset `margin-bottom` to we don't get a space after
        // the table inside the scroll area
        margin-bottom: 0;
    }

    @media print {
        overflow: visible !important;
        max-height: none !important;
    }

    @supports (position: sticky) {
        > .table {
            // Positioning of sticky headers
            > thead > tr > th {
                // Header cells need to be sticky on top
                position: sticky;
                top: 0;
                z-index: $zindex-1;
            }

            > thead,
            > tbody,
            > tfoot {
                > tr > .table-sticky-column {
                    position: sticky;
                    left: 0;
                }
            }

            > thead {
                > tr > .table-sticky-column {
                    // z-index needs to be higher than sticky columns and
                    // sticky headers for correct layering
                    z-index: $zindex-1 + 1;
                }
            }

            > tbody,
            > tfoot {
                > tr > .table-sticky-column {
                    // z-index needs to be lower than sticky header that
                    // is also a sticky column
                    z-index: $zindex-1;
                }
            }
        }
    }
}
